module Fuji.JsonTest where

import Daml.Script

import DA.Map

data Depth1 = Depth1 with foo: Optional Int
data Depth2 = Depth2 with foo: Optional (Optional Int)
data Foo = Bar Int | Baz | Quux (Optional Int)
data Status = Enabled | Disabled
data Person = Person with name : Text, age : Int
data PersonMap = PersonMap with m : Map Person Text
data Oa a = Oa with foo: Optional a
data OPerson = OPerson with bar: Oa Person
data Rec = Rec with foo: Text, bar: Rec
data Bottom a = Bottom with bottom: a
data Middle = Middle with middle: Bottom Int
data Top = Top with top: Middle

data BottomRec a = BottomRec with val: a; top: BottomRec a
data TopRec = TopRec with foo: BottomRec Int

template Outer
  with
    owner : Party
    inner : ContractId Inner
  where
    signatory owner

    nonconsuming choice OuterCall : ()
     controller owner
        do
          exercise inner InnerCall
          exercise self Archive
          return ()

template Inner
  with
    owner : Party
  where
    signatory owner

    choice InnerCall : ()
     controller owner
        do
          create Leaf with ..
          return ()

template Leaf
  with
    owner : Party
  where
    signatory owner

template Account with
    owner : Party
    number : Text
  where
    signatory owner
    key (owner, number) : (Party, Text)
    maintainer key._1

test : Script ()
test = do
  alice <- allocateParty "Alice"
  innerCid <- submit alice do
    createCmd Inner with owner = alice
  outerCid <- submit alice do
    createCmd Outer with owner = alice; inner = innerCid
  submit alice do
    exerciseCmd outerCid OuterCall
  pure ()
