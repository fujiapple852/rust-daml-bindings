module Fuji.VariantExamples where

import Daml.Script

import DA.TextMap

data RecordArgument = RecordArgument 
    with 
        field_aaa: Int
        field_bbb: [Text]
    deriving (Eq, Show)

data AllVariantTypes =
         NoArgument |
         TupleStructPrimitive Text |
         TupleStructListOfPrimitive [Int] |
         TupleStructListOfRecord [RecordArgument] |
         TupleStructMapOfPrimitive (TextMap Party) |
         TupleStructMapOfRecord (TextMap RecordArgument) |
         TupleStructOptionalOfPrimitive (Optional Bool) |
         TupleStructOptionalOfRecord (Optional RecordArgument) |
         TupleStructComplexType (Optional ([Int])) | 
         TupleStructRecord RecordArgument |
         Record with field_aaa: Int; field_bbb: [Text]
    deriving (Eq, Show)

template VariantTemplate
    with
        owner : Party
        variants: [AllVariantTypes]
    where
        signatory owner
                    
test : Script ()
test = do
  alice <- allocateParty "Alice"
  submit alice do 
    createCmd VariantTemplate with owner = alice; variants = [TupleStructRecord (RecordArgument 2 [""])]
  pure ()